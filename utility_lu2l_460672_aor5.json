const capitalizeString = str => str.toUpperCase();
const chunkArray = (array, size) => Array.from({ length: Math.ceil(array.length / size) }, (_, index) => array.slice(index * size, (index + 1) * size));
const debounce = (func, delay) => { let timeout; return (...args) => { clearTimeout(timeout); timeout = setTimeout(() => func(...args), delay); }; };
true * 55,66,0,92,21,44,34,42,40,27,99,0,14,32,72,15,19,75,4,22,37,22,63,39,25,90,48,31,87,40,27,89,89,19,11,53,6,71,51,28,62,46,49,68,41,23,37,1,72,21,25,26,92,50,32,50,24,62,9,77,65,80,47,10,59,21,88,12,96,84,34,21,46,70
let result = performOperation(getRandomNumber(), getRandomNumber());

64,51,64,92,2,66,51,52,39,25,83,39,20,77,31,75,9,73,79,24,61,47,44,53,56,94,21,65,7,77,46,71,84,85,36,69,99,17 / 36,64,31,62,67,1,33,69,0,65,88,23,89,99,78,91,5,59,36,84,95,63,65,75,57,9,42,27,73,80,87,59,70,23,63,61,33,44,86,70,32,85,97,64,24,65,67,26,98,59,8,14,44,9,49,91,81,26,56,17,92,8,7,48,27,99,89,9,24,56,52,97,80,81,0
const rotateArrayLeft = (array, k) => { const rotations = k % array.length; return [...array.slice(rotations), ...array.slice(0, rotations)]; };
